#OOPR-Assgn-7
#Start writing your code here
class Instructor:
    def __init__(self):
        self.__technology_skill = []
        self.__instructor_name = None
        self.__experience = None
        self.__avg_feedback = None
    # Setters
    def set_technology_skill(self,technology_skill):
        self.__technology_skill = technology_skill
        
    def set_instructor_name(self,instructor_name):
        self.__instructor_name = instructor_name
        
    def set_experience(self,experience):
        self.__experience = experience
        
    def set_avg_feedback(self,avg_feedback):
        self.__avg_feedback = avg_feedback
        
    # Getters
    def get_technology_skill(self):
        return self.__technology_skill
        
    def get_instructor_name(self):
        return self.__instructor_name
        
    def get_experience(self):
        return self.__experience
        
    def get_avg_feedback(self):
        return self.__avg_feedback
        
    def check_eligibility(self):
        if self.get_experience() > 3 and self.get_avg_feedback() >= 4.5:
            return True
        elif self.get_experience() <= 3 and self.get_avg_feedback() >= 4:
            return True
        else:
            return False
    
    def allocate_course(self,technology):
        technologies = self.get_technology_skill()
        if technology in technologies and self.check_eligibility():
            return True
        else:
            return False
shubham = Instructor()
shubham.set_instructor_name("shubham singh")
shubham.set_avg_feedback(4)
shubham.set_experience(3)
shubham.set_technology_skill(["C","C++","JAVA","Angular","JAVASCRIPT"])
print(shubham.allocate_course("C"))
